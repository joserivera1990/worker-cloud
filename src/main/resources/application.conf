# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="changeme"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.http.filters = "utils.Filters"

play.http.parser.maxDiskBuffer = 128MB

parsers.anyContent.maxLength = 128MB

play.http.parser.maxMemoryBuffer = 128MB

client.parsing.max-content-length = 128mb
play.server.akka.max-content-length = infinite
akka.http.client.parsing.max-content-length=128mb
akka.http.server.parsing.max-content-length=128mb
# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

#play.filters.enabled += "play.filters.cors.CORSFilter"



# Akka config

akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off
  # Auth token cleaner

  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
  host=smtp.gmail.com
  port=465
  ssl=yes
  tls=true
  user="cloudandesgroup10@gmail.com"
  password="Cloud2018@" # This is the application specific generated password
  debug=false
  mock=false
  from="ing.joserivera1990@gmail.com"
}

# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}

play.filters.cors {
  allowedOrigins = ["http://localhost:4200"]
  allowedHttpMethods = ["OPTIONS", "DELETE", "GET", "POST", "PUT"]
  allowedHttpHeaders = ["Accept", "content-type"]
  preflightMaxAge = 3 days
}

cassandra {
  keyspace: "auth4n"
  hosts: ["127.0.0.1"]
  port: 9042
  user: "cassandra"
  password: "hLsm6<?rHs$t3>@G"
}
//# Default database configuration using PostgreSQL database engine
//db.default.driver=org.postgresql.Driver
//db.default.url="jdbc:postgresql://database.example.com/playdb"


# Default database configuration using MySQL database engine
# Connect to playdb as playdbuser
#db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:postgresql://localhost:5432/project1"
db.default.user=test
db.default.password="oe9jaacZLbR9pN"
db.default.jndiName=DefaultDS
include "silhouette.conf"

aws.s3.acceskey = "AKIAJM4PI5U3NZGXW2YA"
aws.s3.secretkey = "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"
aws.s3.bucketName = "concurso10"


audio.path.original="http://dt8x0yc9k0axq.cloudfront.net/original/"
audio.path.processed="http://dt8x0yc9k0axq.cloudfront.net/processed/"

cloudfront.path = "http://dt8x0yc9k0axq.cloudfront.net/"

#audio.local.server="/home/joserivera/Documents/newfolder/"
audio.local.server="/app/files/"

audio.ffmpeg="/usr/local/bin/ffmpeg"
audio.ffprobe="/usr/local/bin/ffprobe"

aws.dynamodb.acceskey = "AKIAJCRESU6YL2ERXTIQ"
aws.dynamodb.secretkey = "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"

aws.sqs.acceskey = "AKIAJ54JYLDL5AMME2IA"
aws.sqs.secretkey = "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"
aws.sqs.queueUrl = "https://sqs.us-east-1.amazonaws.com/191529105167/concurso"

url.update.voice="http://balancerServicesWeb-1634123208.us-east-1.elb.amazonaws.com:80/api/updateStatusVoice/idvoice/"
url.send.email="http://balancerServicesWeb-1634123208.us-east-1.elb.amazonaws.com:80/api/sendemail/email/"
url.local.server = "http://127.0.0.1:9100/processed/"

email.message.createvoice ="Buen día. Hemos recibido tu voz y la estamos procesando para que sea publicada en la página del concurso y pueda ser posteriormente revisada por nuestro equipo de trabajo. Tan pronto la voz quede publicada en la página del concurso te notificaremos por email."
email.message.proccesedvoice ="Buen día. Tu voz ya ha sido publicada en la página pública del concurso"

kafka.server="localhost:9092"
play.application.loader=Consumer